---
import { range } from 'lodash-es'
import PageTitle from '../../../components/page-title'
import PostsPage from '../../../components/pages/posts-page'
import { RECORDS_PER_PAGE } from '../../../constants'
import ContentLayout from '../../../layouts/ContentLayout.astro'
import { getAuthorMap } from '../../../lib/api/author'
import { getAllPosts } from '../../../lib/api/post'
import markdownHtml from '../../../lib/markdown-html'
import { getUrlFriendlyTag } from '../../../lib/tags'
import { getSectionBaseUrl } from '../../../lib/urls'

export async function getStaticPaths() {
  const authorMap = getAuthorMap(['id', 'name', 'title', 'picture'])

  const allPosts = await Promise.all(getAllPosts().map(async post => {
        return {
          ...post,
          excerpt: await markdownHtml(post.fields.excerpt || ''),
          //html : await markdownHtml(post.fields.content || ''),
          authors: [authorMap[post.fields.author]],
        }
      }))

  

  let sections = new Set<string>()

  allPosts.forEach(post => {
    sections.add(post.fields.section)
  })

  let paths: any[] = []

  Array.from(sections).forEach(section => {
    const posts = allPosts.filter(post => post.fields.section.includes(section))



    const pages = Math.floor(
      (posts.length + RECORDS_PER_PAGE - 1) / RECORDS_PER_PAGE
    )

    range(0, pages).forEach((page:number) => {
      const start = page * RECORDS_PER_PAGE
      const end = start + RECORDS_PER_PAGE
      const currentPage = page + 1

      paths.push({
        params: {
          slug: `${getUrlFriendlyTag(section)}/page/${currentPage.toString()}`,
        },
        props: {
          section,
          currentPage,
          pages,
          posts
        }
      })
    })
  })

  return paths
}

const { slug } = Astro.params

const {
  section,
  currentPage,
  pages,
  posts
} = Astro.props
---

<ContentLayout title={section} tab="Blog" supertitle="Section">
  <PostsPage posts={posts} page={currentPage} pages={pages} root={getSectionBaseUrl(section)} />
</ContentLayout>