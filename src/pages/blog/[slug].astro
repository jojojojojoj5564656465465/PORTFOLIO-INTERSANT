---
import ArticleContainer from '../../components/article-container'
import PostBody from '../../components/post/post-body'
import PostDetails from '../../components/post/post-details'
import PostDetailsHoz from '../../components/post/post-details-hoz'
import PostHeader from '../../components/post/post-header'
import PostSocialMedia from '../../components/post/post-social-media'
import PostSocialMediaVert from '../../components/post/post-social-media-vert'
import PostTags from '../../components/post/post-tags'
import RelatedPosts from '../../components/post/related-posts'
import BaseLayout from '../../layouts/BaseLayout.astro'
import PostLayout from '../../layouts/PostLayout.astro'
import SeventyLayout from '../../layouts/SeventyLayout.astro'
import ThreeQuarterLayout from '../../layouts/ThreeQuarterLayout.astro'
import { getAuthorMap } from '../../lib/api/author'
import { getAllPosts, getSectionMap } from '../../lib/api/post'
import markdownHtml from '../../lib/markdown-html'
import { getCanonicalPostSlug } from '../../lib/slug'
import { getTags } from '../../lib/tags'


export async function getStaticPaths() {
  const authorMap = getAuthorMap(['id', 'name', 'title', 'picture'])

  const allPosts = getAllPosts([
    'title',
    'description',
    'slug',
    'author',
    'section',
    'tags',
    'related',
    'content',
    'hero',
  ])

  const sectionMap = getSectionMap(allPosts)

  const paths = await Promise.all(allPosts.map(async basePost => {
    const slug = getCanonicalPostSlug(basePost.slug)

    let postIndex = -1

    // Object.keys(sectionMap).every(section => {
    //   sectionMap[section].every((p, index) => {
    //     if (p.slug === slug) {
    //       post = p
    //       postIndex = index
    //       return false
    //     }

    //     return true
    //   })

    //   if (post !== null) {
    //     return false
    //   }

    //   return true
    // })

    const author = authorMap[basePost.fields.author]

    const post = {
      ...basePost,
      html: await markdownHtml(basePost.fields.content || ''),
      authors: [author],
    }

    const relatedTitles = getTags(post.fields.related)

    const relatedPosts = await Promise.all(
      allPosts
        .filter(p => relatedTitles.includes(p.fields.title))
        .map(async p => {
          return {
            ...p,
            excerpt: await markdownHtml(p.fields.excerpt || ''),
            authors: [author],
          }
        })
    )

    const readMorePosts = await Promise.all(
      sectionMap[post.fields.section].slice(postIndex + 1).map(async p => {
        return {
          ...p,
          excerpt: await markdownHtml(p.fields.excerpt || ''),
          authors: [author],
        }
      })
    )


    return {
      params: { slug },
      props: {
        post,
        relatedPosts,
        readMorePosts
      },
    }
  }))

  return paths
}

const { slug } = Astro.params
const { post, relatedPosts, readMorePosts } = Astro.props
---

<BaseLayout title={post.fields.title} tab="Blog">
  <>
    <article>
      <PostHeader post={post} />

      <ArticleContainer className="my-48">
        <PostDetailsHoz post={post} className="mb-4" />

        <PostSocialMedia post={post} className="lg:hidden" />

        <PostLayout className="mt-8">
          <PostSocialMediaVert post={post} slot="left-col" />

          <div slot="s1">
          <PostBody content={post.html} className="text-justify" />
          <PostTags post={post} className="mt-8" />
        </div>
          <!-- <div class="sticky top-0 mb-32" style="top: 40px" slot="s2">
            <PostDetails post={post} />
          </div> -->

          
        </PostLayout>
        
        
      </ArticleContainer>
    </article>

    {readMorePosts.length > 0 && (
    <ArticleContainer className="bg-gray-50 py-16 lg:py-24">
      <RelatedPosts posts={readMorePosts} title="Keep Reading" />
    </ArticleContainer>
    )}

    {relatedPosts.length > 0 && (
    <ArticleContainer className="bg-gray-50 py-16 lg:py-24">
      <RelatedPosts posts={relatedPosts} title="Related Posts" />
    </ArticleContainer>
    )}
  </>
</BaseLayout>